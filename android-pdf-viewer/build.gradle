apply plugin: 'com.android.library'


android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "4.0.0"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -frtti -fexceptions -DANDROID_STL=c++_shared -DHAVE_PTHREADS -D__STDC_FORMAT_MACROS -DFT2_BUILD_LIBRARY"
            }
        }

        ndk{
            //stl "gnustl_shared"
            abiFilters "arm64-v8a" //* ,'mips','mips64' */, 'x86','x86_64'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            jniDebuggable true
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

}

dependencies {
    //implementation 'com.android.support:support-compat:28.0.0'
    //api 'com.github.barteksc:pdfium-android:1.9.0'
    //api 'com.github.LightSun:PdfiumAndroid:2.0.7'
}
//------------------------ for jitpack build -----------------
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.LightSun'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}